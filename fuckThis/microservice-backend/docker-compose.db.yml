version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: email-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: emaildb
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schemas:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'emaildb']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - email-network

  redis:
    image: redis:7-alpine
    container_name: email-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - email-network

  # Optional: Redis Insight for Redis management (like pgAdmin for PostgreSQL)
  redis-insight:
    image: redis/redisinsight:latest
    container_name: email-redis-insight
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_data:/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - email-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: email-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@email.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - email-network

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  redis_insight_data:

networks:
  email-network:
    driver: bridge